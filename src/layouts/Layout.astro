---
interface Props {
  title: string;
}

import Footer from "@components/Footer.astro";
import Header from "@components/Header.astro";
import "@styles/global.css";
import { ViewTransitions } from 'astro:transitions';

const { title } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" , initial-scale="1" />
    <ViewTransitions />

    <title>Bryan Boucher</title>
    <meta name="description" content="Welcome to my personal site." />
    <meta name="generator" content={Astro.generator} />
    <link rel="icon" type="image/x-icon" href="/assets/img/favicon.svg" />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Raleway:ital,wght@0,100..900;1,100..900&display=swap"
      rel="stylesheet"
    />

    <meta property="og:title" content={title} />
    <meta property="og:site_name" content="Your Name" />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <!-- <meta property="og:image" content="/assets/img/" /> -->
    <meta property="og:image:alt" content="Welcome to my personal site." />
    <meta property="og:locale" content="en" />
    <meta property="og:description" content="Welcome to my personal site." />
  </head>
  <body>
    <Header transition:persist />
    <main class="body-main" transition:animate="fade">
      <slot />
    </main>
    <Footer transition:persist />
  </body>
  <script>
    function updateNavState() {
      // Get the current path of the page
      const currentPath = window.location.pathname;
  
      // Select all <li> elements that contain nav links
      const navItems = document.querySelectorAll(".nav-item");
  
      navItems.forEach((item) => {
        // Find the nested <a> inside the <li>
        const link = item.querySelector("a");
  
        // Check if the link's href matches the current path
        if (link && link.getAttribute("href") === currentPath) {
          // Add the selected-state class to the <li>
          item.classList.add("nav-item__selected");
        } else {
          // Remove the class if it doesn't match (useful if state changes)
          item.classList.remove("nav-item__selected");
        }
      });
    }
  
    // Run the function on initial load
    document.addEventListener("DOMContentLoaded", updateNavState);
  
    // Run the function after each view transition completes
    document.addEventListener("astro:after-swap", updateNavState);
  </script>
</html>
